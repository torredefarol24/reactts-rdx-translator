{"version":3,"sources":["components/greeting/Greet.tsx","state-management/action-types/post-action-types.ts","state-management/api-calls/post-api-calls.ts","state-management/actions/post-actions.ts","components/dummy-posts/posts-list.tsx","components/dummy-posts/basicDetails.tsx","components/dummy-posts/addPost.tsx","components/dummy-posts/posts.tsx","components/dummy-posts/postById.tsx","components/thunk-posts/posts-list.tsx","components/thunk-posts/basicDetails.tsx","components/thunk-posts/addPost.tsx","components/thunk-posts/posts.tsx","components/thunk-posts/postById.tsx","keys/apiKeys.ts","state-management/api-calls/translator-api-calls.ts","state-management/action-types/translator-action-types.ts","state-management/actions/translator-actions.ts","components/translator/form.tsx","components/translator/results.tsx","components/translator/translator.tsx","components/bookmark/bookmark.tsx","routes/route-setup.tsx","components/navbar/Navbar.tsx","App.tsx","state-management/reducers/post-reducer.ts","state-management/reducers/translator-reducer.ts","state-management/reducers/lang-list/lang-list.ts","state-management/reducers/root-reducer.ts","state-management/store/store.ts","index.tsx"],"names":["Greet","react_default","a","createElement","className","actionTypes","LOAD_POSTS","SHOW_POST_DETAILS","ADD_POST","DELETE_POST","EDIT_POST","SHOW_ERROR","ADD_DUMMY_POST","DELETE_DUMMY_POST","SHOW_DETAILS_DUMMY_POST","EDIT_DUMMY_POST","PostApiCalls","retrieveAllPosts","fetch","then","res","json","editPostById","post","endpointURL","id","requestBody","title","body","userId","requestOptions","method","JSON","stringify","headers","Content-Type","deletePostById","postId","createPost","data","loadPosts","posts","type","postActionTypes","payload","loadError","err","addNewPost","PostActions","showDummyPostDetails","addDummyPost","deleteDummyPost","editDummyPost","getPostsFromAPI","dispatch","postApiCalls","splice","catch","error","showPostDetails","deletePost","resp","replaceDeletedPost","editPost","replaceUpdatedPost","addPost","connectedDummyPosts","this","props","displayDummyPostDetails","_this","dummyPostsList","dummyPosts","map","dummyPost","key","onClick","showDummyDetails","React","Component","PostsList","connect","state","postReducer","postActions","ConnectedPostDetails","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","selectedPost","author","NavLink","to","pathname","handleDelete","withoutPost","DummyPostDetails","selectedDummyPost","AddConnectedDummyPost","dummyPostTitle","dummyPostAuthor","dummyPostBody","handleFormSubmit","bind","assertThisInitialized","handleAuthorChange","handleBodyChange","handleTitleChange","event","preventDefault","newPost","console","log","setState","target","value","onSubmit","placeholder","onChange","name","AddDummyPost","DummyPosts","DummyPostsIndex","posts_list","DummyPostAdd","dummy_posts_addPost","DummyPostBasicDetails","basicDetails","ConnectedPostById","postBody","postAuthor","postTitle","handleBack","parseInt","location","updatedPost","history","push","postSection","postEditForm","DummyPostById","connectedposts","displayPostDetails","postList","ConnectedAddPost","AddPost","PostsIndex","thunk_posts_posts_list","PostBasicDetails","thunk_posts_basicDetails","PostAddForm","thunk_posts_addPost","ApiKeys","YANDEX_TRANSLATOR_KEY","translatorApiCalls","sendTextForTranslation","textInfo","concat","text","langCode","encodeURI","sourceText","translatedText","RECEIVE_TRANSLATED_TEXT","BEGIN_TRANSLATION","ADD_BOOKMARK","DELETE_BOOKMARK","sendTranslatedText","translatorActionTypes","sendError","translatorActions","translateText","translationHasBegun","addBookmark","bookmark","deleteBookmark","ConnectedTranslatorForm","translateToLang","translateToLangCode","langs","noTargetLangSelected","codeMatchFound","handleTranslateLangChange","handleTextChange","textToTranslate","_this2","langName","length","filter","lang","code","targetLangDiv","defaultValue","targetLangMatchDiv","targetTextDiv","submitButton","disabled","TranslatorForm","translatorReducer","ConnectedTranslationResults","newBookmark","objectSpread","uuid","translatedInfo","_this$props","waitingMessage","bookMarkMessage","waitingMessageDiv","message","bookMarkMessageDiv","Results","handleBookmark","TranslationResults","translatedTextResult","translationStatus","bookmarkStatus","Translator","TranslatorForm_Func","translator_form","TranslatorResults","results","ConnectedBookmarks","bookmarkItem","bookmarkDelete","handleDeleteBookmark","bookmarks","bookmarkItems","noBookmarks","Bookmarks","RouteSetup","Route","exact","path","component","ThunkPosts","ThunkPostById","Navbar","classActive","NavBrand","role","aria-label","aria-expanded","data-target","toggleNav","aria-hidden","NavMenuItems","App","BrowserRouter","navbar_Navbar","route_setup","initialState","allReducers","arguments","undefined","action","foundPost","toConsumableArray","postItem","searchedPosts","otherPosts","remainingPosts","matchedPost","filteredPosts","otherBookmarks","rootReducer","combineReducers","middlewares","composeWithDevTools","applyMiddleware","thunk","logger","store","createStore","subscribe","getState","RootComponent","es","src_App","ReactDOM","render","src_RootComponent","document","getElementById"],"mappings":"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T,CACEuE,KAAO,KACPvE,KAAO,YAET,CACEuE,KAAO,KACPvE,KAAO,YAET,CACEuE,KAAO,KACPvE,KAAO,UAET,CACEuE,KAAO,KACPvE,KAAO,UAET,CACEuE,KAAO,KACPvE,KAAO,WAET,CACEuE,KAAO,KACPvE,KAAO,cAET,CACEuE,KAAO,KACPvE,KAAO,SAET,CACEuE,KAAO,KACPvE,KAAO,WAET,CACEuE,KAAO,KACPvE,KAAO,aAET,CACEuE,KAAO,KACPvE,KAAO,WAET,CACEuE,KAAO,KACPvE,KAAO,UAET,CACEuE,KAAO,KACPvE,KAAO,WAET,CACEuE,KAAO,KACPvE,KAAO,WAET,CACEuE,KAAO,KACPvE,KAAO,UAET,CACEuE,KAAO,KACPvE,KAAO,WAET,CACEuE,KAAO,KACPvE,KAAO,UAET,CACEuE,KAAO,KACPvE,KAAO,SAET,CACEuE,KAAO,KACPvE,KAAO,SAET,CACEuE,KAAO,KACPvE,KAAO,WAET,CACEuE,KAAO,KACPvE,KAAO,SAET,CACEuE,KAAO,KACPvE,KAAO,WAET,CACEuE,KAAO,KACPvE,KAAO,cAET,CACEuE,KAAO,KACPvE,KAAO,iBAET,CACEuE,KAAO,KACPvE,KAAO,YAET,CACEuE,KAAO,KACPvE,KAAO,SAET,CACEuE,KAAO,KACPvE,KAAO,aAET,CACEuE,KAAO,KACPvE,KAAO,WAET,CACEuE,KAAO,KACPvE,KAAO,cAET,CACEuE,KAAO,KACPvE,KAAO,SAET,CACEuE,KAAO,KACPvE,KAAO,WAET,CACEuE,KAAO,KACPvE,KAAO,UAET,CACEuE,KAAO,KACPvE,KAAO,aAET,CACEuE,KAAO,KACPvE,KAAO,UAET,CACEuE,KAAO,KACPvE,KAAO,UAET,CACEuE,KAAO,KACPvE,KAAO,aAET,CACEuE,KAAO,KACPvE,KAAO,WAET,CACEuE,KAAO,KACPvE,KAAO,gBAET,CACEuE,KAAO,KACPvE,KAAO,WAET,CACEuE,KAAO,KACPvE,KAAO,UAET,CACEuE,KAAO,KACPvE,KAAO,cAET,CACEuE,KAAO,KACPvE,KAAO,YAET,CACEuE,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","file":"static/js/main.4f3fb745.chunk.js","sourcesContent":["import React from 'react'\n\nconst Greet:React.FunctionComponent = () => {\n  const message = (\n    <div className='block'>\n      <h3 className='title is-3 mt24'> React TypeScript App\n      </h3>\n      <p> Demo React, Redux (Thunk) app made using TypeScript</p>\n      <p> Frontend JS Framework : React</p>\n      <p> Libraries used: Redux, Thunk, UUID</p>\n      <p> Design Framework : Bulma CSS</p>\n      <p> APIs Used : Yandex Translator API, JSONTypicode (Fake Rest API)</p>\n      <p className='mt24'> Created By <span className='myName'>BurningRaven06</span></p>\n    </div>\n  )\n  return message\n}\n\nexport default Greet","const actionTypes:any = {\n  LOAD_POSTS : \"LOAD_POSTS\",\n  SHOW_POST_DETAILS : \"SHOW_POST_DETAILS\",\n  ADD_POST : \"ADD_POST\",\n  DELETE_POST : \"DELETE_POST\",\n  EDIT_POST : 'EDIT_POST',\n  SHOW_ERROR : \"SHOW_ERROR\",\n  ADD_DUMMY_POST : \"ADD_DUMMY_POST\",\n  DELETE_DUMMY_POST : \"DELETE_DUMMY_POST\",\n  SHOW_DETAILS_DUMMY_POST : \"SHOW_DETAILS_DUMMY_POST\",\n  EDIT_DUMMY_POST : \"EDIT_DUMMY_POST\"\n}\nexport default actionTypes","const retrievePosts = () => {\n  return fetch(\"https://jsonplaceholder.typicode.com/posts\").then( res => { return res.json() }) \n}\n\nconst editPost = (post:any) => {\n  let endpointURL = \"https://jsonplaceholder.typicode.com/post/\" + post.id\n  let requestBody = {\n    id : post.id,\n    title : post.title,\n    body : post.body,\n    userId : post.userId\n  }\n  let headerOptions = {\n    \"Content-Type\" : \"application/json\"\n  }\n\n  let requestOptions = {\n    method : \"PUT\",  \n    body : JSON.stringify(requestBody),\n    headers : headerOptions\n  }\n\n  return fetch(endpointURL, requestOptions).then( res => { return res.json() })\n}\n\n\nconst deletePost = (postId:any) => {\n  let endpointURL = \"https://jsonplaceholder.typicode.com/post/\" + postId\n  let headerOptions = {\n    \"Content-Type\" : \"application/json\"\n  }\n  let requestOptions = {\n    method : \"DELETE\",  \n    headers : headerOptions\n  }\n  return fetch(endpointURL, requestOptions).then( res => { return res.json() })\n}\n\nconst createNewPost = (post:any) => {\n  let endpointURL = \"https://jsonplaceholder.typicode.com/posts\"\n  let requestBody = {\n    title : post.title,\n    body : post.body,\n    userId : post.userId\n  }\n  let headerOptions = {\n    \"Content-Type\" : \"application/json\"\n  }\n\n  let requestOptions = {\n    method : \"POST\",  \n    body : JSON.stringify(requestBody),\n    headers : headerOptions\n  }\n\n  return fetch(endpointURL, requestOptions).then( data => { \n    return data.json()}\n  )\n}\n\nconst PostApiCalls = {\n  retrieveAllPosts : retrievePosts,\n  editPostById : editPost,\n  deletePostById : deletePost,\n  createPost : createNewPost\n}\n\nexport default PostApiCalls","import postActionTypes from '../action-types/post-action-types'\nimport postApiCalls from '../api-calls/post-api-calls'\n\nconst showDetailsofDummyPost = (postId:Number) => {\n  return {\n    type : postActionTypes.SHOW_DETAILS_DUMMY_POST,\n    payload : postId\n  }\n}\n\nconst showPostDetails = (postId:Number) => {\n  return {\n    type : postActionTypes.SHOW_POST_DETAILS,\n    payload : postId\n  }\n}\n\nconst addDummyPost = (post:any) => {\n  return {\n    type : postActionTypes.ADD_DUMMY_POST,\n    payload : post\n  }\n}\n\nconst deleteDummyPost = (postId:any) => {\n  return {\n    type : postActionTypes.DELETE_DUMMY_POST,\n    payload : postId\n  }\n}\n\nconst editDummyPost = (post:any) => {\n  return {\n    type : postActionTypes.EDIT_DUMMY_POST,\n    payload : post\n  }\n}\n\nconst callLoadAllPostsApi = (): any => {\n  return (dispatch:any) => {\n    return postApiCalls.retrieveAllPosts()\n      .then( posts => {\n        posts = posts.splice(0,10)\n        dispatch(loadPosts(posts)) \n      })\n      .catch( error => dispatch(loadError(error)) )\n  }\n}\n\nconst loadPosts = (posts:any) => {\n  return {\n    type : postActionTypes.LOAD_POSTS,\n    payload : posts\n  }\n}\n\nconst loadError = (err:any) => {\n  return {\n    type : postActionTypes.SHOW_ERROR,\n    payload : err\n  }\n}\n\nconst replaceUpdatedPost = (post:any) => {\n  return {\n    type : postActionTypes.EDIT_POST,\n    payload : post\n  }\n}\n\n\nconst callEditPostByIdAPI = (post:any) :any => {\n  return (dispatch:any) => {\n    return postApiCalls.editPostById(post)\n      .then(resp => dispatch(replaceUpdatedPost(post)) )\n      .catch(err => dispatch(loadError(err)))\n  }\n}\n\nconst replaceDeletedPost = (postId:any) => {\n  return {\n    type : postActionTypes.DELETE_POST,\n    payload : postId\n  }\n}\n\nconst callDeletePostByIdAPI = (postId:any):any => {\n  return (dispatch:any) => {\n    return postApiCalls.deletePostById(postId)\n      .then( resp => dispatch(replaceDeletedPost(postId)) )\n      .catch(err => dispatch(loadError(err)))\n  }\n}\n\nconst callCreatePostAPI = (post:any) : any => {\n  return (dispatch:any) => {\n    return postApiCalls.createPost(post)\n      .then(data => dispatch(addNewPost(data)))\n      .catch(err => dispatch(loadError(err)))\n  }\n}\n\nconst addNewPost = (post:any) => {\n  return {\n    type : postActionTypes.ADD_POST,\n    payload : post\n  }\n}\n\nconst PostActions = {\n  showDummyPostDetails : showDetailsofDummyPost,\n  addDummyPost : addDummyPost,\n  deleteDummyPost : deleteDummyPost,\n  editDummyPost : editDummyPost,\n  getPostsFromAPI : callLoadAllPostsApi,\n  showPostDetails : showPostDetails,\n  deletePost : callDeletePostByIdAPI,\n  editPost : callEditPostByIdAPI,\n  addPost : callCreatePostAPI\n}\n\nexport default PostActions","import React from 'react'\nimport {connect} from 'react-redux'\nimport postActions from '../../state-management/actions/post-actions'\n\nconst mapStateToProps = (state:any) => {\n  let mappedProps = {\n    dummyPosts : state.postReducer.dummyPosts\n  }\n  return mappedProps\n}\n\nconst mapDispatchToProps = (dispatch:any) => {\n  let mappedProps = {\n    displayDummyPostDetails : (postId: Number) => dispatch(postActions.showDummyPostDetails(postId)),\n   \n  }\n  return mappedProps\n}\n\nexport interface Props {\n  dummyPosts: any,\n  displayDummyPostDetails : any,\n}\n\nclass connectedDummyPosts extends React.Component<Props>{\n  showDummyDetails(id: any){\n    this.props.displayDummyPostDetails(id)\n  }\n\n  render(){\n\n    const dummyPostsList = (\n      this.props.dummyPosts.map( (dummyPost:any) => {\n        return (\n          <li key={dummyPost.id}>\n            <a className=\"button dummyPostBtn\" onClick={ () => this.showDummyDetails(dummyPost.id)}> {dummyPost.title} </a>\n          </li>\n        )\n      })\n    )\n\n    const dummyPosts = (\n      <div className='block'>\n        <p className='menu-label'>\n          Dummy Posts \n        </p>\n        <ul className='menu-list'>\n          {dummyPostsList}\n        </ul>\n      </div>\n    )\n\n    return dummyPosts\n  }\n}\n\nconst PostsList = connect(mapStateToProps, mapDispatchToProps)(connectedDummyPosts)\nexport default PostsList","import React from 'react'\nimport {connect} from 'react-redux'\nimport {NavLink} from 'react-router-dom'\nimport postActions from '../../state-management/actions/post-actions'\n\nconst mapStateToProps = (state:any) => {\n  let mappedProps = {\n    post : state.postReducer.selectedDummyPost\n  }\n  return mappedProps\n}\n\n\nconst mapDispatchToProps = (dispatch:any) => {\n  let mappedProps = {\n    deletePost : (id:any) => dispatch(postActions.deleteDummyPost(id))\n  }\n  return mappedProps\n}\n\n\nexport interface Props {\n  post : any,\n  deletePost : any\n}\n\n\nclass ConnectedPostDetails extends React.Component <Props> {\n  constructor(props:any){\n    super(props)\n  }\n\n  handleDelete(postId:any){\n    this.props.deletePost(postId)\n  }\n\n  render(){\n    const { post } = this.props\n\n    const selectedPost = (\n      <div className='block'>\n        <article className=\"message is-dark\">\n          <div className=\"message-header\">\n            <p>{post.title}</p>\n          </div>\n          <div className=\"message-body\">\n            <p className='subtitle'>By: </p><p className='title'><strong>{post.author}</strong></p>\n          </div>\n          <div className='block'>\n            <NavLink className='button is-info' to={{pathname : \"/posts/details/\" + post.id, state : {post : post} }} > Read More </NavLink>\n            <button className='button is-danger' onClick={ () => this.handleDelete(post.id) }>Delete</button>\n          </div>\n        </article>\n      </div>\n    )\n\n    const withoutPost = (\n      <div className='block'>\n        <p> Click on a Post to see the details.</p>\n      </div>\n    )\n\n    return post.title ? selectedPost : withoutPost\n  }\n}\n\nconst DummyPostDetails = connect(mapStateToProps, mapDispatchToProps)(ConnectedPostDetails)\nexport default DummyPostDetails","import React from 'react'\nimport {connect} from 'react-redux'\nimport postActions from '../../state-management/actions/post-actions'\n\nconst mapStateToProps = null\nconst mapDispatchToProps = (dispatch:any) => {\n  let mappedProps = {\n    addDummyPost : (post:any) => dispatch(postActions.addDummyPost(post))\n  }\n  return mappedProps\n}\n\ninterface Props{\n  addDummyPost : any\n}\n\ninterface State{\n  dummyPostAuthor : string,\n  dummyPostBody : string,\n  dummyPostTitle : string\n}\n\nclass AddConnectedDummyPost extends React.Component<Props, State>{\n  constructor(props:any){\n    super(props)\n    this.state = {\n      dummyPostTitle : \"\",\n      dummyPostAuthor : \"\",\n      dummyPostBody : \"\"\n    }\n    this.handleFormSubmit = this.handleFormSubmit.bind(this)\n    this.handleAuthorChange = this.handleAuthorChange.bind(this)\n    this.handleBodyChange = this.handleBodyChange.bind(this)\n    this.handleTitleChange = this.handleTitleChange.bind(this)\n  }\n\n  handleFormSubmit(event:any){\n    event.preventDefault()\n    let newPost = {\n      author: this.state.dummyPostAuthor,\n      body : this.state.dummyPostBody,\n      title : this.state.dummyPostTitle\n    }\n    console.log(newPost, 'BEFORE ACTION')\n    this.props.addDummyPost(newPost);\n    this.setState({\n      dummyPostAuthor : \"\",\n      dummyPostBody : \"\",\n      dummyPostTitle : \"\"\n    })\n    return false\n  }\n\n  handleAuthorChange(event :any){\n    this.setState({\n      dummyPostAuthor : event.target.value\n    })\n  }\n\n  handleBodyChange(event: any){\n    this.setState({\n      dummyPostBody : event.target.value\n    })\n  }\n\n  handleTitleChange(event : any){\n    this.setState({\n      dummyPostTitle : event.target.value\n    })\n  }\n\n  render(){\n    return(\n      <div className='block'>\n        <form onSubmit={this.handleFormSubmit}>\n          <div className=\"field\">\n            <label className=\"label\">Author</label>\n            <div className=\"control\">\n              <input className=\"input\" type=\"text\" placeholder=\"Your Name\" value={this.state.dummyPostAuthor} onChange={this.handleAuthorChange} id=\"post_author\" name=\"dummyPostAuthor\" />\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">Title</label>\n            <div className=\"control\">\n              <input className=\"input\" type=\"texpost_titlet\" placeholder=\"Your Post Heading\" value={this.state.dummyPostTitle} onChange={this.handleTitleChange} id=\"post_title\" name=\"dummyPostTitle\"/>\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">Body</label>\n            <div className=\"control\">\n              <input className=\"input\" type=\"text\" placeholder=\"Your Message\" value={this.state.dummyPostBody} onChange={this.handleBodyChange} id=\"post_body\" name=\"dummyPostBody\"/>\n            </div>\n          </div>\n          <button type='submit' className='button is-success'>Submit</button>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst AddDummyPost = connect(mapStateToProps, mapDispatchToProps)(AddConnectedDummyPost)\nexport default AddDummyPost","import React from 'react'\nimport PostsList from './posts-list'\nimport DummyPostDetails from './basicDetails'\nimport AddPost from './addPost'\n\nconst DummyPosts:React.FunctionComponent = () =>{\n\n  const DummyPostsIndex = (\n    <div className='column'>\n      <h5 className='title is-5'>Read Posts</h5>\n      <PostsList></PostsList>\n    </div>\n  )\n  const DummyPostAdd = (\n    <div className='column'>\n      <h5 className='title is-5'>Add Post</h5>\n      <AddPost></AddPost>\n    </div>\n  )\n  const DummyPostBasicDetails = (\n    <div className='column'>\n      <h5 className='title is-5'>Basic Details</h5>\n      <DummyPostDetails></DummyPostDetails>\n    </div>\n  )\n\n  const DummyPosts = (\n    <div className='block'>\n      <h3 className='title is-3'>Posts</h3>\n      <div className='columns'>\n        {DummyPostsIndex}\n        {DummyPostAdd}\n        {DummyPostBasicDetails}\n      </div>\n    </div>\n  )\n\n  return DummyPosts\n}\nexport default DummyPosts","import React from 'react'\nimport {connect} from 'react-redux'\nimport {NavLink} from 'react-router-dom'\nimport postActions from '../../state-management/actions/post-actions'\n\nconst mapStateToProps = null\n\nconst mapDispatchToProps = (dispatch:any) => {\n  let mappedProps = {\n    editPost : (post:any) => dispatch(postActions.editDummyPost(post))\n  }\n  return mappedProps\n}\n\nexport interface Props {\n  location: any,\n  editPost : any,\n  history : any\n}\n\ninterface State {\n  postAuthor: string,\n  postBody : string,\n  postTitle : string,\n  postId : any\n}\n\nclass ConnectedPostById extends React.Component <Props, State> {\n  constructor(props: any){\n    super(props)\n    this.state = {\n      postBody : \"\",\n      postAuthor : \"\",\n      postTitle : \"\",\n      postId : \"\"\n    }\n    this.handleFormSubmit = this.handleFormSubmit.bind(this)\n    this.handleBodyChange = this.handleBodyChange.bind(this)\n    this.handleBack = this.handleBack.bind(this)\n  }\n\n  componentDidMount(){\n    this.setState({\n      postId : parseInt(this.props.location.state.post.id),\n      postAuthor : this.props.location.state.post.author,\n      postTitle : this.props.location.state.post.title,\n      postBody : this.props.location.state.post.body\n    })\n  }\n\n  handleFormSubmit(event:any){\n    event.preventDefault()\n    let updatedPost = {\n      id : this.state.postId,\n      author : this.state.postAuthor,\n      body : this.state.postBody,\n      title : this.state.postTitle\n    }\n    this.props.editPost(updatedPost)\n    this.props.history.push(\"/posts\")\n    return false\n  }\n\n  handleBodyChange(event:any){\n    this.setState({\n      postBody : event.target.value\n    })\n  }\n\n  handleBack(){\n    this.props.history.push(\"/posts\")\n  }\n\n\n  render(){\n   \n    const postSection = (\n      <section className=\"hero is-primary\">\n        <div className=\"hero-body \">\n          <div className=\"container\">\n            <h1 className=\"title\">\n              {this.state.postTitle}\n            </h1>\n            <h2 className=\"subtitle\">\n              By: <strong>{this.state.postAuthor}</strong>\n            </h2>\n            <p>{this.state.postBody}</p>\n          </div>\n        </div>\n      </section>\n    )\n\n    const postEditForm = (\n      <div className='block'>\n        <h3 className='subtitle is-3'>Edit Post Body</h3>\n        <form onSubmit={this.handleFormSubmit}>\n          <div className=\"field\">\n            <label className=\"label\">Body</label>\n            <div className=\"control\">\n              <input className=\"input\" type=\"text\" placeholder=\"Your Message\" value={this.state.postBody} onChange={this.handleBodyChange} id=\"post_body\" name=\"dummyPostBody\"/>\n            </div>\n          </div>\n          <button type='submit' className='button is-success'>Submit</button>\n          <button className='button is-primary' onClick={ this.handleBack }>Back</button>\n        </form>\n      </div>\n    )\n\n    const postById = (\n      <div className='block'>\n        <div className='columns'>\n          <div className='column is-two-thirds'>\n            {postSection}\n          </div>\n          <div className='column'>\n            {postEditForm}\n          </div>\n        </div>\n      </div>\n    )\n\n    return postById\n  }\n}\n\nconst DummyPostById = connect(mapStateToProps, mapDispatchToProps)(ConnectedPostById)\nexport default DummyPostById","import React from 'react'\nimport {connect} from 'react-redux'\nimport postActions from '../../state-management/actions/post-actions'\n\nconst mapStateToProps = (state:any) => {\n  let mappedProps = {\n    posts : state.postReducer.posts\n  }\n  return mappedProps\n}\n\nconst mapDispatchToProps = (dispatch:any) => {\n  let mappedProps = {\n    displayPostDetails : (postId: Number) => dispatch(postActions.showPostDetails(postId))\n  }\n  return mappedProps\n}\n\nexport interface Props {\n  posts: any,\n  displayPostDetails : any,\n}\n\nclass connectedposts extends React.Component<Props>{\n  showDummyDetails(id: any){\n    this.props.displayPostDetails(id)\n  }\n\n  render(){\n    const postList = (\n      this.props.posts.map( (post:any) => {\n        return (\n          <li key={post.id}>\n            <a className=\"button dummyPostBtn\" onClick={ () => this.showDummyDetails(post.id)}> {post.title} </a>\n          </li>\n        )\n      })\n    )\n\n    const posts = (\n      <div className='block'>\n        <p className='menu-label'>\n          Posts \n        </p>\n        <ul className='menu-list'>\n          {postList}\n        </ul>\n      </div>\n    )\n\n    return posts\n  }\n}\n\nconst PostsList = connect(mapStateToProps, mapDispatchToProps)(connectedposts)\nexport default PostsList","import React from 'react'\nimport {connect} from 'react-redux'\nimport {NavLink} from 'react-router-dom'\nimport postActions from '../../state-management/actions/post-actions'\n\nconst mapStateToProps = (state:any) => {\n  let mappedProps = {\n    post : state.postReducer.selectedDummyPost\n  }\n  return mappedProps\n}\n\nconst mapDispatchToProps = (dispatch:any) => {\n  let mappedProps = {\n    deletePost : (postId:any) => dispatch(postActions.deletePost(postId))\n  }\n  return mappedProps\n}\n\nexport interface Props {\n  post : any,\n  deletePost : any,\n}\n\n\nclass ConnectedPostDetails extends React.Component <Props> {\n  handleDelete(postId:any){\n    this.props.deletePost(postId)\n  }\n\n  render(){\n    const { post } = this.props\n    const selectedPost = (\n      <div className='block'>\n        <article className=\"message is-dark\">\n          <div className=\"message-header\">\n            <p>{post.title}</p>\n          </div>\n          <div className=\"message-body\">\n            <NavLink className='button is-info' to={{pathname : \"/posts/thunk/details/\" + post.id, state : {post : post} }} > Read More </NavLink>\n            <button className='button is-danger' onClick={ () => this.handleDelete(post.id) }>Delete</button>\n          </div>\n        </article>\n      </div>\n    )\n\n    const withoutPost = (\n      <div className='block'>\n        <p> Click on a Post to see the details.</p>\n      </div>\n    )\n\n    return post.title ? selectedPost : withoutPost\n  }\n}\n\nconst DummyPostDetails = connect(mapStateToProps, mapDispatchToProps)(ConnectedPostDetails)\nexport default DummyPostDetails","import React from 'react'\nimport {connect} from 'react-redux'\nimport postActions from '../../state-management/actions/post-actions'\n\nconst mapStateToProps = null\nconst mapDispatchToProps = (dispatch:any) => {\n  let mappedProps = {\n    addPost : (post:any) => dispatch(postActions.addPost(post))\n  }\n  return mappedProps\n}\n\ninterface Props{\n  addPost : any\n}\n\ninterface State{\n  postBody : string,\n  postTitle : string\n}\n\nclass ConnectedAddPost extends React.Component<Props, State>{\n  constructor(props:any){\n    super(props)\n    this.state = {\n      postTitle : \"\",\n      postBody : \"\"\n    }\n    this.handleFormSubmit = this.handleFormSubmit.bind(this)\n    this.handleBodyChange = this.handleBodyChange.bind(this)\n    this.handleTitleChange = this.handleTitleChange.bind(this)\n  }\n\n  handleFormSubmit(event:any){\n    event.preventDefault()\n    let newPost = {\n      body : this.state.postBody,\n      title : this.state.postTitle,\n      userId : 12\n    }\n    this.props.addPost(newPost);\n    this.setState({\n      postBody : \"\",\n      postTitle : \"\"\n    })\n    return false\n  }\n\n  handleBodyChange(event: any){\n    this.setState({\n      postBody : event.target.value\n    })\n  }\n\n  handleTitleChange(event : any){\n    this.setState({\n      postTitle : event.target.value\n    })\n  }\n\n  render(){\n    return(\n      <div className='block'>\n        <form onSubmit={this.handleFormSubmit}>\n          <div className=\"field\">\n            <label className=\"label\">Title</label>\n            <div className=\"control\">\n              <input className=\"input\" type=\"texpost_titlet\" placeholder=\"Your Post Heading\" value={this.state.postTitle} onChange={this.handleTitleChange} id=\"post_title\" name=\"postTitle\"/>\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">Body</label>\n            <div className=\"control\">\n              <input className=\"input\" type=\"text\" placeholder=\"Your Message\" value={this.state.postBody} onChange={this.handleBodyChange} id=\"post_body\" name=\"postBody\"/>\n            </div>\n          </div>\n          <button type='submit' className='button is-success'>Submit</button>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst AddPost = connect(mapStateToProps, mapDispatchToProps)(ConnectedAddPost)\nexport default AddPost","import React from 'react'\nimport PostsList from './posts-list'\nimport PostDetails from './basicDetails'\nimport AddPost from './addPost'\n\nconst DummyPosts:React.FunctionComponent = () =>{\n  const PostsIndex = (\n    <div className='column is-half'>\n      <h5 className='title is-5'>Read Posts (Thunk)</h5>\n      <PostsList></PostsList>\n    </div>\n  )\n  const PostBasicDetails = (\n    <div className='block'>\n    <h5 className='title is-5'>Basic Details</h5>\n    <PostDetails></PostDetails>\n  </div>\n  )\n  const PostAddForm = (\n    <div className='block'>\n      <h5 className='title is-5'>Add Post (Thunk)</h5>\n      <AddPost></AddPost>\n    </div>\n  )\n  const Posts = (\n    <div className='block'>\n      <h3 className='title is-3'>Posts</h3>\n      <div className='columns'>\n        {PostsIndex}\n        <div className='column is-half'>\n          {PostBasicDetails}\n          {PostAddForm}\n        </div>\n      </div>\n    </div>\n  )\n  return Posts\n}\nexport default DummyPosts","import React from 'react'\nimport {connect} from 'react-redux'\nimport postActions from '../../state-management/actions/post-actions'\n\nconst mapStateToProps = null\nconst mapDispatchToProps = (dispatch:any) => {\n  let mappedProps = {\n    editPost : (post:any) => dispatch(postActions.editPost(post))\n  }\n  return mappedProps\n}\n\nexport interface Props {\n  location: any,\n  editPost : any,\n  history : any\n}\n\ninterface State {\n  postBody : string,\n  postTitle : string,\n  postId : any\n}\n\nclass ConnectedPostById extends React.Component <Props, State> {\n  constructor(props: any){\n    super(props)\n    this.state = {\n      postBody : \"\",\n      postTitle : \"\",\n      postId : \"\"\n    }\n    this.handleFormSubmit = this.handleFormSubmit.bind(this)\n    this.handleBodyChange = this.handleBodyChange.bind(this)\n    this.handleTitleChange = this.handleTitleChange.bind(this)\n    this.handleBack = this.handleBack.bind(this)\n  }\n\n  componentDidMount(){\n    this.setState({\n      postId : parseInt(this.props.location.state.post.id),\n      postTitle : this.props.location.state.post.title,\n      postBody : this.props.location.state.post.body\n    })\n  }\n\n  handleFormSubmit(event:any){\n    event.preventDefault()\n    let updatedPost = {\n      id : this.state.postId,\n      body : this.state.postBody,\n      title : this.state.postTitle,\n      userId : 14\n    }\n    this.props.editPost(updatedPost)\n    this.props.history.push(\"/posts/thunk\")\n    return false\n  }\n\n  handleTitleChange(event:any){\n    this.setState({\n      postTitle : event.target.value\n    })\n  }\n\n  handleBodyChange(event:any){\n    this.setState({\n      postBody : event.target.value\n    })\n  }\n\n  handleBack(){\n    this.props.history.push(\"/posts/thunk\")\n  }\n\n  render(){\n   \n    const postSection = (\n      <section className=\"hero is-primary\">\n        <div className=\"hero-body \">\n          <div className=\"container\">\n            <h1 className=\"title\">\n              {this.state.postTitle}\n            </h1>\n            <p>{this.state.postBody}</p>\n          </div>\n        </div>\n      </section>\n    )\n\n    const postEditForm = (\n      <div className='block'>\n        <h3 className='subtitle is-3'>Edit Post Body</h3>\n        <form onSubmit={this.handleFormSubmit}>\n          <div className=\"field\">\n            <label className=\"label\">Title</label>\n            <div className=\"control\">\n              <input className=\"input\" type=\"text\" placeholder=\"Post Title\" value={this.state.postTitle} onChange={this.handleTitleChange} id=\"post_body\" name=\"dummyPostTitle\"/>\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">Body</label>\n            <div className=\"control\">\n              <input className=\"input\" type=\"text\" placeholder=\"Your Message\" value={this.state.postBody} onChange={this.handleBodyChange} id=\"post_body\" name=\"dummyPostBody\"/>\n            </div>\n          </div>\n          <button type='submit' className='button is-success'>Submit</button>\n          <button className='button is-primary' onClick={ this.handleBack }>Back</button>\n        </form>\n      </div>\n    )\n\n    const postById = (\n      <div className='block'>\n        <div className='columns'>\n          <div className='column'>\n            {postSection}\n          </div>\n        </div>\n        <div className='columns'>\n          <div className='column is-half'>\n            {postEditForm}\n          </div>\n        </div>\n      </div>\n    )\n\n    return postById\n  }\n}\n\nconst DummyPostById = connect(mapStateToProps, mapDispatchToProps)(ConnectedPostById)\nexport default DummyPostById","const ApiKeys = {\n  YANDEX_TRANSLATOR_KEY : \"trnsl.1.1.20180602T115952Z.3d24041130dc5675.53f0911b8aabfeeab9f50b5e822328d8006a134a\"\n}\n\nexport default ApiKeys","import ApiKeys from '../../keys/apiKeys'\n\nconst sendTextToTranslate = (textInfo:any) => {\n  let endpointURL = `https://translate.yandex.net/api/v1.5/tr.json/translate?key=${ApiKeys.YANDEX_TRANSLATOR_KEY}&lang=ru&text=${textInfo.text}&lang=${textInfo.langCode}`\n  endpointURL = encodeURI(endpointURL)\n  \n  return fetch(endpointURL)\n    .then( resp => resp.json())\n    .then( data => {  \n      let translatedResult = {\n        sourceText : textInfo.text,\n        translatedText : data.text[0]\n      }\n      return translatedResult\n    })\n      \n}\n\nconst translatorApiCalls = {\n  sendTextForTranslation : sendTextToTranslate\n}\n\nexport default translatorApiCalls\n","const actionTypes:any = {\n  RECEIVE_TRANSLATED_TEXT : \"RECEIVE_TRANSLATED_TEXT\",\n  SHOW_ERROR : \"SHOW_ERROR\",\n  BEGIN_TRANSLATION : \"BEGIN_TRANSLATION\",\n  ADD_BOOKMARK : \"ADD_BOOKMARK\",\n  DELETE_BOOKMARK : \"DELETE_BOOKMARK\"\n}\nexport default actionTypes","import translatorApiCalls from '../api-calls/translator-api-calls'\nimport translatorActionTypes from '../action-types/translator-action-types'\n\n\nconst translateText = (textInfo: any) : any => {\n  return (dispatch:any) => {\n    return translatorApiCalls.sendTextForTranslation(textInfo)\n      .then( data => dispatch(sendTranslatedText(data)) )\n      .catch( err => dispatch(sendError(err)) )\n  }\n}\n\nconst sendTranslatedText = (translatedText:any) => {\n  return {\n    type : translatorActionTypes.RECEIVE_TRANSLATED_TEXT,\n    payload : translatedText\n  }\n}\n\nconst sendError = (error:any) => {\n  return {\n    type : translatorActionTypes.SHOW_ERROR,\n    payload : error\n  }\n}\n\nconst translationStarted = () => {\n  return {\n    type : translatorActionTypes.BEGIN_TRANSLATION,\n    payload : \"Please Wait for the translation to complete\"\n  }\n}\n\nconst createBookmark = (bookmark:any) => {\n  return {\n    type : translatorActionTypes.ADD_BOOKMARK,\n    payload : bookmark\n  }\n}\n\nconst removeBookmark = (bookmark:any) => {\n  return {\n    type : translatorActionTypes.DELETE_BOOKMARK,\n    payload : bookmark\n  }\n}\n\nconst translatorActions = {\n  translateText : translateText,\n  translationHasBegun : translationStarted,\n  addBookmark : createBookmark,\n  deleteBookmark : removeBookmark\n}\n\nexport default translatorActions","import React from 'react'\nimport {connect} from 'react-redux'\nimport translatorActions from '../../state-management/actions/translator-actions'\n\nexport interface Props {\n  langs : any,\n  translateText : any\n}\n\ninterface State {\n  text:string,\n  translateToLang : string,\n  translateToLangCode : string,\n  codeMatchFound : boolean,\n  noTargetLangSelected : boolean,\n  langs : any,\n}\n\nconst mapStateToProps = (state:any) => {\n  let mappedProps = {\n    langs : state.translatorReducer.langs\n  }\n  return mappedProps\n}\n\nconst mapDispatchToProps = (dispatch:any) => {\n  let mappedProps = {\n    translateText : (textInfo:any) => {\n      dispatch(translatorActions.translateText(textInfo))\n      dispatch(translatorActions.translationHasBegun())\n    }\n  }\n  return mappedProps\n}\n\nclass ConnectedTranslatorForm extends React.Component <Props, State>{\n  constructor(props: Props){\n    super(props)\n    this.state = {\n      text: \"\",\n      translateToLang : \"\",\n      translateToLangCode : \"\",\n      langs : this.props.langs,\n      noTargetLangSelected : true,\n      codeMatchFound : false\n    }\n    this.handleFormSubmit = this.handleFormSubmit.bind(this)\n    this.handleTranslateLangChange = this.handleTranslateLangChange.bind(this)\n    this.handleTextChange = this.handleTextChange.bind(this)\n  }\n\n  handleFormSubmit(event:any){\n    event.preventDefault()\n    let textToTranslate = {\n      text : this.state.text,\n      langCode : this.state.translateToLangCode\n    }\n    this.props.translateText(textToTranslate)\n    this.setState({\n      text: \"\"\n    })\n  }\n\n  handleTranslateLangChange(event:any){\n    let langName = event.target.value;\n    if (langName.length > 0) {\n      this.setState({ \n        noTargetLangSelected : false,\n        translateToLang : langName,\n      })\n      this.state.langs.filter( (lang:any) => {\n        if (lang.name == langName){\n          this.setState({\n            translateToLangCode : lang.code,\n            codeMatchFound : true\n          })           \n        } \n      })\n    } else {\n      this.setState({\n        noTargetLangSelected : true,\n        codeMatchFound : false\n      })\n    }    \n  }\n\n  handleTextChange(event:any){\n    this.setState({\n      text : event.target.value\n    })\n  }\n\n\n  render(){\n    const targetLangDiv = (\n      <div className='column is-half'>\n        <div className=\"field\">\n          <label className=\"label\">Translate To (Target Lang)</label>\n          <div className=\"control\">\n            <input className=\"input\" type=\"text\" placeholder=\"Language Name\" defaultValue={this.state.translateToLang} onChange={this.handleTranslateLangChange} id=\"translateToLang\" name=\"translateToLang\"/>\n          </div>\n        </div>\n      </div>\n    )\n\n    const targetLangMatchDiv = (\n      <div className='column is-half'>\n        {this.state.noTargetLangSelected && <p> Type your Target Language </p>}\n        \n        {!this.state.noTargetLangSelected && !this.state.codeMatchFound && <p> No Match Found for {this.state.translateToLang} </p>}\n\n        {this.state.codeMatchFound && \n          <div className='block'>\n            <p> Target Lang selected: </p>\n            <p className='title'> <strong> {this.state.translateToLangCode} </strong> </p> \n          </div>  \n        }\n      </div>\n    )\n\n    const targetTextDiv = (\n      <div className='field'>\n        <label className='label'>Text To Translate</label>\n        <textarea className='textarea' placeholder='Type Something in any language' onChange ={this.handleTextChange} defaultValue={this.state.text}>\n        </textarea> \n      </div>\n    )\n\n    const submitButton = (\n      <div>\n        {this.state.codeMatchFound && <button type='submit' className='button is-success'>Submit</button>}\n        {!this.state.codeMatchFound && <button className='button is-default' disabled>Submit</button>}\n      </div>\n    )\n    \n    const Form = (\n      <form onSubmit={this.handleFormSubmit}>\n        <div className='columns'>\n          {targetLangDiv}\n          {targetLangMatchDiv}\n        </div>\n        {targetTextDiv}\n        {submitButton}\n      </form>\n    )\n\n    return Form\n  }\n}\n\nconst TranslatorForm = connect(mapStateToProps, mapDispatchToProps)(ConnectedTranslatorForm)\nexport default TranslatorForm","import React from 'react'\nimport {connect} from 'react-redux'\nimport uuid from 'uuid'\nimport translatorActions from '../../state-management/actions/translator-actions'\n\nexport interface Props{\n  translatedInfo : any,\n  waitingMessage : any,\n  addBookmark : any,\n  bookMarkMessage : any\n}\ninterface State{\n\n}\nconst mapStateToProps = (state:any) => {\n  let mappedProps = {\n    translatedInfo : state.translatorReducer.translatedTextResult,\n    waitingMessage : state.translatorReducer.translationStatus,\n    bookMarkMessage : state.translatorReducer.bookmarkStatus\n  }\n  return mappedProps\n}\n\nconst mapDispatchToProps = (dispatch:any) => {\n  let mappedProps = {\n    addBookmark : (bookmark:any) => dispatch(translatorActions.addBookmark(bookmark))\n  }\n  return mappedProps\n}\n\nclass ConnectedTranslationResults extends React.Component <Props, State>{\n  handleBookmark(){\n    let newBookmark = {\n      id : uuid(),\n      ...this.props.translatedInfo\n    }\n    this.props.addBookmark(newBookmark)\n  }\n\n  render(){\n    const { translatedInfo, waitingMessage , bookMarkMessage} = this.props\n    \n    const waitingMessageDiv = (\n      <p className='subtitle'> {waitingMessage.message} </p>\n    )\n\n    const bookMarkMessageDiv = (\n      <p className='subtitle'> {bookMarkMessage.message}</p>\n    )\n\n    const Results = (\n      <div className='block'>\n        <h5 className='subtitle is-5'>{translatedInfo.sourceText}</h5>\n        <h3 className='title is-3'>{translatedInfo.translatedText}</h3>\n        <button className='button is-info' onClick={this.handleBookmark.bind(this)}>Bookmark This Translation</button>\n      </div>\n    )\n    \n    if (waitingMessage.message && !translatedInfo.sourceText){\n      return waitingMessageDiv\n    } else if (bookMarkMessage.message) {\n      return bookMarkMessageDiv\n    } else if (translatedInfo.sourceText && !bookMarkMessage.message){\n      return Results\n    } else {\n      return \"\"\n    }\n    \n  }\n}\n\nconst TranslationResults = connect(mapStateToProps, mapDispatchToProps)(ConnectedTranslationResults)\nexport default TranslationResults","import React from 'react'\nimport TranslatorForm from './form'\nimport TranslationResults from './results'\n\nconst Translator:React.FunctionComponent = () =>{\n  const TranslatorForm_Func = (\n    <div className='block'>\n      <h3 className='subtitle is-3'> Translator </h3>\n      <TranslatorForm></TranslatorForm>\n    </div>\n  )\n  const TranslatorResults = (\n    <div className='block'>\n      <h3 className='subtitle is-3'> Results</h3>\n      <TranslationResults></TranslationResults>\n    </div>    \n  )\n  const TranslatorMain = (\n    <div className='block'>\n      <h3 className='title is-3'> Yandex Translator API </h3>\n      <div className='columns'>\n        <div className='column is-half'>\n          {TranslatorForm_Func}\n        </div>\n        <div className='column is-half'>\n          {TranslatorResults}\n        </div>\n      </div>\n    </div>\n  )\n  return TranslatorMain\n}\n\nexport default Translator","import React from 'react'\nimport {connect} from 'react-redux'\nimport translatorActions from '../../state-management/actions/translator-actions'\n\nexport interface Props{\n  bookmarks : any,\n  deleteBookmark : any\n}\n\ninterface State{\n\n}\n\nconst mapStateToProps = (state:any) => {\n  let mappedProps = {\n    bookmarks : state.translatorReducer.bookmarks\n  }\n  return mappedProps\n}\n\nconst mapDispatchToProps = (dispatch:any) => {\n  let mappedProps = {\n    deleteBookmark : (bookmark:any) => dispatch(translatorActions.deleteBookmark(bookmark))\n  }\n  return mappedProps\n}\n\nclass ConnectedBookmarks extends React.Component <Props, State>{\n  handleDeleteBookmark(bookmark:any) : any {\n    this.props.deleteBookmark(bookmark)\n  }\n\n  bookmarkItem = (bookmark:any): any => {\n    return (\n      <div className='column is-three-quarters'>\n        <section className=\"hero is-primary\">\n          <div className=\"hero-body\">\n            <div className=\"container\">\n              <h1 className=\"title\">\n                {bookmark.translatedText}\n              </h1>\n              <h2 className=\"subtitle\">\n                {bookmark.sourceText}\n              </h2>\n            </div>\n          </div>\n        </section>\n      </div>\n    )\n  }\n\n  bookmarkDelete = (bookmark:any): any => {\n    return (\n      <div className='column '>\n        <div className=\"notification is-danger bookmarkDelBtn\" onClick={ () => this.handleDeleteBookmark(bookmark)}>\n          <p className='title has-text-centered'>Delete</p>\n        </div>\n\n      </div>\n    )\n  }\n\n  render(){\n    const {bookmarks} = this.props\n    \n    const bookmarkItems = (\n      bookmarks.map( (bookmark:any) => {\n        return (\n          <div className=\"columns\">\n            {this.bookmarkItem(bookmark)}\n            {this.bookmarkDelete(bookmark)}\n          </div>\n        )\n      })\n    )\n\n    const noBookmarks = (\n      <p>You have not bookmarked any translations yet</p>\n    )\n      \n    const bookmarksList = (\n      <div className='block'>\n        <h3 className='title is-3'> BookMarks </h3>\n        {bookmarks.length > 0 ? bookmarkItems : noBookmarks}\n      </div>\n    )\n\n    return bookmarksList\n  }\n}\n\nconst Bookmarks = connect(mapStateToProps, mapDispatchToProps)(ConnectedBookmarks)\nexport default Bookmarks","import React from 'react'\nimport {Route} from 'react-router-dom'\n\nimport Greet from '../components/greeting/Greet'\nimport DummyPosts from '../components/dummy-posts/posts'\nimport DummyPostById from '../components/dummy-posts/postById'\nimport ThunkPosts from '../components/thunk-posts/posts'\nimport ThunkPostById from '../components/thunk-posts/postById'\nimport Translator from '../components/translator/translator'\nimport Bookmarks from '../components/bookmark/bookmark'\n\nconst RouteSetup:React.FunctionComponent = () => {\n  return(\n    <div className='block'>\n      <Route exact path='/' component={Greet} />\n      <Route exact path='/posts' component={DummyPosts} />\n      <Route exact path=\"/posts/details/:id\" component={DummyPostById} />\n\n      <Route exact path='/posts/thunk' component={ThunkPosts} />\n      <Route exact path='/posts/thunk/details/:id' component={ThunkPostById} />\n\n      <Route exact path='/translator' component={Translator} />\n      <Route exact path='/bookmarks' component={Bookmarks} />\n    </div>\n  )\n}\n\nexport default RouteSetup","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nclass Navbar extends React.Component{\n  state = {\n    classActive : \"\"\n  }\n\n  toggleNav(){\n    if (this.state.classActive == \"\"){\n      this.setState({\n        classActive : \"is-active\"\n      })\n    } else {\n      this.setState({\n        classActive : \"\"\n      })\n    }\n  }\n\n  render(){\n\n    const NavBrand = (\n      <div className=\"navbar-brand\">\n        <NavLink className=\"navbar-item\" to=\"/\">\n          {/* <img src=\"https://bulma.io/images/bulma-logo.png\" width=\"112\" height=\"28\" /> */}\n          ReactTsTranslator\n        </NavLink>\n\n        <a role=\"button\" className=\"navbar-burger burger\" aria-label=\"menu\" aria-expanded=\"false\" data-target=\"navbarMenus\" onClick={this.toggleNav.bind(this)}>\n          <span aria-hidden=\"true\"></span>\n          <span aria-hidden=\"true\"></span>\n          <span aria-hidden=\"true\"></span>\n        </a>\n      </div>\n    )\n\n    const NavMenuItems = (\n      <div id=\"navbarMenus\" className={\"navbar-menu \" + this.state.classActive} >\n        <div className=\"navbar-start\">\n          <NavLink className=\"navbar-item\" to=\"/\" onClick={this.toggleNav.bind(this)}>\n            Home\n          </NavLink>\n          <NavLink className=\"navbar-item\" to=\"/posts\" onClick={this.toggleNav.bind(this)}>\n            Posts\n          </NavLink>\n          <NavLink className=\"navbar-item\" to=\"/posts/thunk\" onClick={this.toggleNav.bind(this)}>\n            Posts (Thunk)\n          </NavLink>\n          <NavLink className=\"navbar-item\" to=\"/translator\" onClick={this.toggleNav.bind(this)}>\n            Translator\n          </NavLink>\n          <NavLink className=\"navbar-item\" to=\"/bookmarks\" onClick={this.toggleNav.bind(this)}>\n            Bookmarks\n          </NavLink>\n        </div>\n      </div>\n    )\n\n    const Navbar = (\n      <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n        {NavBrand}\n        {NavMenuItems}\n      </nav>\n    )\n\n    return Navbar\n  }\n\n}\n\nexport default Navbar\n\n\n\n\n\n\n","import React, { Component } from 'react';\nimport {BrowserRouter} from 'react-router-dom'\nimport RouteSetup from './routes/route-setup'\nimport Navbar from './components/navbar/Navbar'\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className='container'>\n          <Navbar></Navbar>\n          <RouteSetup></RouteSetup>\n        </div>\n      </BrowserRouter>\n      \n    );\n  }\n}\n\nexport default App;\n","import postActionTypes from '../action-types/post-action-types';\n\nconst initialState = {\n  posts : [],\n  dummyPosts : [\n    {\n      id : 1,\n      title : \"Something Interesting\",\n      author : \"Don Corleone\",\n      body : \"Some Dummy Description & A long post body, consider using lorem ipsum\"\n    },\n    {\n      id:2,\n      title : \"Cartman Arrives\",\n      author : \"Michael Jackson\",\n      body : \"Insert some random content here so that the body has some words\"\n    },\n    {\n      id:3,\n      title : \"The Last Samurai Soundtrack\",\n      author : \"Someone Cool\",\n      body : \"Pretty neat soundtrack and can't seem to remember much of it\"\n    },\n    {\n      id:4,\n      title : \"Winter Problems\",\n      author : \"Me\",\n      body : \"Feet get frozen and the apetite becomes weird\"\n    },\n    {\n      id: 5,\n      title : \"Christman Miracles\",\n      author : \"Charles Dickens\",\n      body : \"Backpain will never leave you.\"\n    }\n  ],\n  selectedDummyPost : {}\n}\n\nconst postReducer = (state=initialState, action:any) =>{\n  switch(action.type){\n    case postActionTypes.LOAD_POSTS:\n      return { ...state, posts : action.payload}\n    \n    case postActionTypes.SHOW_POST_DETAILS:\n      var postId = action.payload\n      var foundPost = state.posts.filter( (post:any) => post.id == postId)\n      return { ...state, selectedDummyPost : foundPost[0]}\n\n    case postActionTypes.ADD_POST:\n      return { ...state, posts: [...state.posts, action.payload]}\n    \n    case postActionTypes.EDIT_POST:\n      var postItem = action.payload\n      var searchedPosts: any = state.posts.filter( (post:any) => post.id != postItem.id)\n\n      searchedPosts.push(postItem)\n      return { ...state, posts : searchedPosts}\n\n    case postActionTypes.DELETE_POST:\n      var postId = action.payload\n      var otherPosts = state.posts.filter( (post:any) => post.id != postId)\n      return { ...state, posts: otherPosts, selectedDummyPost : {} }\n\n    case postActionTypes.SHOW_ERROR:\n      console.error(action.payload)\n      return { ...state, posts : []}\n\n    case postActionTypes.ADD_DUMMY_POST:\n      return { ...state, dummyPosts: [...state.dummyPosts, action.payload]}\n\n    case postActionTypes.DELETE_DUMMY_POST:\n      var postId = action.payload\n      var remainingPosts = state.dummyPosts.filter( (post:any) => post.id != postId)\n      return { ...state, dummyPosts: remainingPosts, selectedDummyPost : {} }\n\n    case postActionTypes.SHOW_DETAILS_DUMMY_POST:\n      var postId = action.payload\n      var matchedPost = state.dummyPosts.filter( post => post.id == postId)\n      return { ...state, selectedDummyPost : matchedPost[0]}\n\n    case postActionTypes.EDIT_DUMMY_POST:\n      var postItem = action.payload\n      var filteredPosts = state.dummyPosts.filter( (post:any) => post.id != postItem.id)\n      filteredPosts.push(postItem)\n      return { ...state, dummyPosts : filteredPosts}\n\n    default:\n      return state\n  }\n}\n\nexport default postReducer\n\n","import langList from './lang-list/lang-list'\nimport translatorActionTypes from '../action-types/translator-action-types'\n\nconst initialState = {\n  langs : langList,\n  translatedTextResult : {},\n  translationStatus : {},\n  bookmarks : [],\n  bookmarkStatus : {}\n}\n\nconst TranslatorReducer = (state=initialState, action:any) => {\n  switch (action.type) {\n    case translatorActionTypes.BEGIN_TRANSLATION:\n      let particularState = { \n        ...state, \n        translatedTextResult : {}, \n        translationStatus : { message : action.payload }\n      }\n      return particularState\n\n    case translatorActionTypes.RECEIVE_TRANSLATED_TEXT:\n      return { ...state, translatedTextResult : action.payload}\n    \n    case translatorActionTypes.ADD_BOOKMARK:\n      let bookmark_AddState = {\n        ... state, \n        bookmarkStatus : { message : \"Bookmark Added\"},\n        bookmarks : [...state.bookmarks, action.payload]\n      }\n      return bookmark_AddState\n    \n      case translatorActionTypes.DELETE_BOOKMARK:\n      var bookmarkItem = action.payload\n      var otherBookmarks = state.bookmarks.filter( (bookmark:any) => bookmark.id != bookmarkItem.id)\n      return {...state, bookmarks : otherBookmarks}\n\n    case translatorActionTypes.SHOW_ERROR:\n      console.error(action.payload)\n      return { ...state}\n\n    default:\n      return state\n  }\n}\n\nexport default TranslatorReducer","let langList = [\n  {\n    code : \"az\" , \n    name : \"Azerbaijan\"\n  },\n  {\n    code : \"sq\" , \n    name : \"Albanian\"\n  },\n  {\n    code : \"am\" , \n    name : \"Amharic\"\n  },\n  {\n    code : \"en\" , \n    name : \"English\"\n  },\n  {\n    code : \"ar\" , \n    name : \"Arabic\"\n  },\n  {\n    code : \"hy\" , \n    name : \"Armenian\"\n  },\n  {\n    code : \"af\" , \n    name : \"Afrikaans\"\n  },\n  {\n    code : \"eu\" , \n    name : \"Basque\"\n  },\n  {\n    code : \"ba\" , \n    name : \"Bashkir\"\n  },\n  {\n    code : \"be\" , \n    name : \"Belarusian\"\n  },\n  {\n    code : \"bn\" , \n    name : \"Bengali\"\n  },\n  {\n    code : \"my\" , \n    name : \"Burmese\"\n  },\n  {\n    code : \"bg\" , \n    name : \"Bulgarian\"\n  },\n  {\n    code : \"bs\" , \n    name : \"Bosnian\"\n  },\n  {\n    code : \"cy\" , \n    name : \"Welsh\"\n  },\n  {\n    code : \"hu\" , \n    name : \"Hungarian\"\n  },\n  {\n    code : \"vi\" , \n    name : \"Vietcodese\"\n  },\n  {\n    code : \"ht\" , \n    name : \"Haitian (Creole)\"\n  },\n  {\n    code : \"gl\" , \n    name : \"Galician\"\n  },\n  {\n    code : \"nl\" , \n    name : \"Dutch\"\n  },\n  {\n    code : \"mr\" , \n    name : \"\tHill Mari\"\n  },\n  {\n    code : \"el\" , \n    name : \"Greek\"\n  },\n  {\n    code : \"ka\" , \n    name : \"Georgian\"\n  },\n  {\n    code : \"gu\" , \n    name : \"Gujarati\"\n  },\n  {\n    code : \"da\" , \n    name : \"Danish\"\n  },\n  {\n    code : \"he\" , \n    name : \"Hebrew\"\n  },\n  {\n    code : \"yi\" , \n    name : \"Yiddish\"\n  },\n  {\n    code : \"id\" , \n    name : \"Indonesian\"\n  },\n  {\n    code : \"ga\" , \n    name : \"Irish\"\n  },\n  {\n    code : \"it\" , \n    name : \"Italian\"\n  },\n  {\n    code : \"is\" , \n    name : \"Icelandic\"\n  },\n  {\n    code : \"es\" , \n    name : \"Spanish\"\n  },\n  {\n    code : \"kk\" , \n    name : \"Kazakh\"\n  },\n  {\n    code : \"kn\" , \n    name : \"Kannada\"\n  },\n  {\n    code : \"ca\" , \n    name : \"Catalan\"\n  },\n  {\n    code : \"ky\" , \n    name : \"Kyrgyz\"\n  },\n  {\n    code : \"zh\" , \n    name : \"Chinese\"\n  },\n  {\n    code : \"ko\" , \n    name : \"Korean\"\n  },\n  {\n    code : \"xh\" , \n    name : \"Xhosa\"\n  },\n  {\n    code : \"km\" , \n    name : \"Khmer\"\n  },\n  {\n    code : \"lo\" , \n    name : \"Laotian\"\n  },\n  {\n    code : \"la\" , \n    name : \"Latin\"\n  },\n  {\n    code : \"lv\" , \n    name : \"Latvian\"\n  },\n  {\n    code : \"lt\" , \n    name : \"Lithuanian\"\n  },\n  {\n    code : \"lb\" , \n    name : \"Luxembourgish\"\n  },\n  {\n    code : \"mg\" , \n    name : \"Malagasy\"\n  },\n  {\n    code : \"ms\" , \n    name : \"Malay\"\n  },\n  {\n    code : \"ml\" , \n    name : \"Malayalam\"\n  },\n  {\n    code : \"mt\" , \n    name : \"Maltese\"\n  },\n  {\n    code : \"mk\" , \n    name : \"Macedonian\"\n  },\n  {\n    code : \"mi\" , \n    name : \"Maori\"\n  },\n  {\n    code : \"mr\" , \n    name : \"Marathi\"\n  },\n  {\n    code : \"mh\" , \n    name : \"\tMari\"\n  },\n  {\n    code : \"mn\" , \n    name : \"Mongolian\"\n  },\n  {\n    code : \"de\" , \n    name : \"German\"\n  },\n  {\n    code : \"ne\" , \n    name : \"Nepali\"\n  },\n  {\n    code : \"no\" , \n    name : \"Norwegian\"\n  },\n  {\n    code : \"pa\" , \n    name : \"Punjabi\"\n  },\n  {\n    code : \"pa\" , \n    name : \"\tPapiamento\"\n  },\n  {\n    code : \"fa\" , \n    name : \"Persian\"\n  },\n  {\n    code : \"pl\" , \n    name : \"Polish\"\n  },\n  {\n    code : \"pt\" , \n    name : \"Portuguese\"\n  },\n  {\n    code : \"ro\" , \n    name : \"Romanian\"\n  },\n  {\n    code : \"ru\" , \n    name : \"Russian\"\n  },\n  {\n    code : \"ce\" , \n    name : \"\tCebuano\"\n  },\n  {\n    code : \"sr\" , \n    name : \"Serbian\"\n  },\n  {\n    code : \"si\" , \n    name : \"Sinhala\"\n  },\n  {\n    code : \"sk\" , \n    name : \"Slovakian\"\n  },\n  {\n    code : \"sl\" , \n    name : \"Slovenian\"\n  },\n  {\n    code : \"sw\" , \n    name : \"Swahili\"\n  },\n  {\n    code : \"su\" , \n    name : \"Sundanese\"\n  },\n  {\n    code : \"tg\" , \n    name : \"Tajik\"}\n    ,{\n\n    code : \"th\" \n    , \n  name : \"Thai\"},\n  {\n    code : \"tl\" , \n    name : \"Tagalog\"\n  },\n  {\n    code : \"ta\" , \n    name : \"Tamil\"\n  },\n  {\n    code : \"tt\" , \n    name : \"Tatar\"\n  },\n  {\n    code : \"te\" , \n    name : \"Telugu\"\n  },\n  {\n    code : \"tr\" , \n    name : \"Turkish\"\n  },\n  {\n    code : \"ud\" , \n    name : \"\tUdmurt\"\n  },\n  {\n    code : \"uz\" , \n    name : \"Uzbek\"\n  },\n  {\n    code : \"uk\" , \n    name : \"Ukrainian\"}\n    ,{\n\n    code : \"ur\" \n    , \n  name : \"Urdu\"},\n  {\n    code : \"fi\" , \n    name : \"Finnish\"\n  },\n  {\n    code : \"fr\" , \n    name : \"French\"\n  },\n  {\n    code : \"hi\" , \n    name : \"Hindi\"\n  },\n  {\n    code : \"hr\" , \n    name : \"Croatian\"\n  },\n  {\n    code : \"cs\" , \n    name : \"Czech\"\n  },\n  {\n    code : \"sv\" , \n    name : \"Swedish\"\n  },\n  {\n    code : \"gd\" , \n    name : \"Scottish\"\n  },\n  {\n    code : \"et\" , \n    name : \"Estonian\"\n  },\n  {\n    code : \"eo\" , \n    name : \"Esperanto\"\n  },\n  {\n    code : \"jv\" , \n    name : \"Javanese\"\n  },\n  {\n    code : \"ja\" , \n    name : \"Japanese\"\n  }\n]\n\nexport default langList","import postReducer from './post-reducer';\nimport translatorReducer from './translator-reducer'\nimport {combineReducers} from 'redux'\n\nconst allReducers:any = {\n  postReducer : postReducer,\n  translatorReducer : translatorReducer\n}\n\nconst rootReducer:any = combineReducers(allReducers)\nexport default rootReducer","import {createStore, applyMiddleware} from 'redux';\nimport logger from 'redux-logger';\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport rootReducer from '../reducers/root-reducer'\n\nconst middlewares = composeWithDevTools(applyMiddleware(thunk, logger))\nconst store = createStore(rootReducer, {}, middlewares)\n\nstore.subscribe( () => {\n  console.log(\"New State \", store.getState())\n})\n\nexport default store\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {Provider} from 'react-redux'\nimport store from './state-management/store/store'\nimport postActions from './state-management/actions/post-actions'\n\n\nclass RootComponent extends React.Component{\n  componentDidMount(){\n    store.dispatch( postActions.getPostsFromAPI() )\n  }\n  render(){\n    return(\n      <Provider store={store}>\n        <App></App>\n      </Provider>\n    )\n  }\n}\n\nReactDOM.render(<RootComponent />, document.getElementById('root'));\n\n"],"sourceRoot":""}